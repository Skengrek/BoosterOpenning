version: '3'

services:

  postgres:
    container_name: 'postgres_db_booster'
    image: 'postgres:16.4'
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - '5437:5432'
    volumes:
      - $HOME/BoosterOpenning/var/lib/postgresql:/var/lib/postgresql/data
    networks:
      - mynetwork

  frontend:
    build: ./frontend
    image: booster_opening_front
    env_file:
      - ./.env
    container_name: booster_opening_front_container
    volumes:
      - ./frontend:/app:z
    ports:
      - "8081:80" # Serve static files on port 80 inside container
    command: nginx -g "daemon off;"
    networks:
      - mynetwork

  backend:
    build: ./backend
    env_file:
      - .env
    image: booster_opening_back
    container_name: booster_opening_back_container
    volumes:
      - ./backend:/app:z
    ports:
      - "8001:8000"
    command: >
      bash -c "poetry run python manage.py runserver 0.0.0.0:8000"
    depends_on:
      - postgres
    networks:
      - mynetwork
  
  celery_worker:
    build: ./backend
    image: booster_opening_celery_worker
    container_name: 'booster_opening_celery_worker'
    command: poetry run celery -A backend worker --loglevel=INFO
    depends_on:
      - backend
      - redis
    env_file:
      - ./.env
    volumes:
      - ./backend:/app:z
    networks:
      - mynetwork

networks:
  mynetwork:
    driver: bridge